name: Default
on:
  push:
    branches:
      - main
env:
  BRANCH_DEVELOP_DEPLOY_SSH_HOSTNAME: ${{ vars.BRANCH_DEVELOP_DEPLOY_SSH_HOSTNAME }}
  BRANCH_DEVELOP_DEPLOY_SSH_PRIVATE_KEY_BASE64: ${{ secrets.BRANCH_DEVELOP_DEPLOY_SSH_PRIVATE_KEY_BASE64 }}
  BRANCH_DEVELOP_DEPLOY_SSH_USERNAME: ${{ vars.BRANCH_DEVELOP_DEPLOY_SSH_USERNAME }}
  BRANCH_MAIN_DEPLOY_SSH_HOSTNAME: ${{ vars.BRANCH_MAIN_DEPLOY_SSH_HOSTNAME }}
  BRANCH_MAIN_DEPLOY_SSH_PRIVATE_KEY_BASE64: ${{ secrets.BRANCH_MAIN_DEPLOY_SSH_PRIVATE_KEY_BASE64 }}
  BRANCH_MAIN_DEPLOY_SSH_USERNAME: ${{ vars.BRANCH_MAIN_DEPLOY_SSH_USERNAME }}
  GITHUB_REF_NAME: ${{ github.ref_name }}
  PROJECT_NAME: ${{ github.event.repository.name }}
jobs:
  default:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version: '20.x'
      - uses: actions/setup-python@v4
        with:
          cache: 'pip'
          python-version: '3.11'

      - name: Setup environment variables based on branches
        run: |
          if [[ "${GITHUB_REF_NAME}" = "develop" ]]; then
            echo "DEPLOY_SSH_HOSTNAME=${BRANCH_DEVELOP_DEPLOY_HOSTNAME}" >> "${GITHUB_ENV}"
            echo "DEPLOY_SSH_PRIVATE_KEY_BASE64=${BRANCH_DEVELOP_SSH_DEPLOY_SSH_PRIVATE_KEY_BASE64}" >> "${GITHUB_ENV}"
            echo "DEPLOY_SSH_USERNAME=${BRANCH_DEVELOP_DEPLOY_SSH_USERNAME}" >> "${GITHUB_ENV}"
          elif [[ "${GITHUB_REF_NAME}" = "main" ]]; then
            echo "DEPLOY_SSH_HOSTNAME=${BRANCH_MAIN_DEPLOY_HOSTNAME}" >> "${GITHUB_ENV}"
            echo "DEPLOY_SSH_PRIVATE_KEY_BASE64=${BRANCH_MAIN_SSH_DEPLOY_SSH_PRIVATE_KEY_BASE64}" >> "${GITHUB_ENV}"
            echo "DEPLOY_SSH_USERNAME=${BRANCH_MAIN_DEPLOY_SSH_USERNAME}" >> "${GITHUB_ENV}"
          else
            exit 1
          fi

      - run: npm install --no-audit
      - run: npm run lint
      - run: npm test

      - name: Setup SSH config
        run: |
          mkdir -p ~/.ssh; echo -e "Host ${DEPLOY_SSH_HOSTNAME}\n    IdentityFile ~/.ssh/deploy.pem\n    Port 222\n    StrictHostKeyChecking accept-new\n    User ${DEPLOY_SSH_USERNAME}" > ~/.ssh/config
      - name: Setup SSH private key
        env:
          DEPLOY_SSH_PRIVATE_KEY_BASE64: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY_BASE64 }}
        run: |
          mkdir -p ~/.ssh; echo -n "${DEPLOY_SSH_PRIVATE_KEY_BASE64}" | base64 -d > ~/.ssh/deploy.pem; chmod 600 ~/.ssh/deploy.pem
      - name: Deploy to server
        run: |
          rsync -Favz --delete-after ./ "${DEPLOY_SSH_HOSTNAME}:${PROJECT_NAME}/"

      - name: Run setup.sh remotely
        run: |
          ssh "${DEPLOY_SSH_HOSTNAME}" "cd ~/${PROJECT_NAME}; scripts/setup.sh"
